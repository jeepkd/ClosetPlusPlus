.TH "Closet" 3 "Thu Jul 19 2018" "ClosetPlusPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Closet
.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'myCloset\&.h'\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCloset\fP ()"
.br
.ti -1c
.RI "virtual \fB~Closet\fP ()"
.br
.RI "Closes the window, then kills the \fBCloset\fP\&. "
.ti -1c
.RI "string \fBToXML\fP () const"
.br
.ti -1c
.RI "string \fBToString\fP () const"
.br
.ti -1c
.RI "string \fBStoreCloset\fP () const"
.br
.ti -1c
.RI "void \fBImportCloset\fP (string filename)"
.br
.RI "This function builds a \fBCloset\fP from a file, then calls the default 'MakeCloset' function\&. "
.ti -1c
.RI "void \fBMakeCloset\fP ()"
.br
.RI "This function is the wrapper function that is responsible for creating the clothes and then inserting them to the appropriate map\&. "
.ti -1c
.RI "string \fBGetClosetName\fP ()"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBShirt\fP \fBAddShirt\fP ()"
.br
.RI "Creates a '\fBShirt\fP' object\&. "
.ti -1c
.RI "\fBPants\fP \fBAddPants\fP ()"
.br
.RI "Creates a '\fBPants\fP' object  This function will take user input to record the necessary details for making a new '\fBPants\fP'\&. This function then calls the parameterized constructor for a '\fBPants\fP' using those details\&. "
.ti -1c
.RI "\fBSocks\fP \fBAddSocks\fP ()"
.br
.RI "Creates a '\fBSocks\fP' object  This function will take user input to record the necessary details for making a new '\fBSocks\fP'\&. This function then calls the parameterized constructor for a '\fBSocks\fP' using those details\&. "
.ti -1c
.RI "\fBShoes\fP \fBAddShoes\fP ()"
.br
.RI "Creates a '\fBShoes\fP' object  This function will take user input to record the necessary details for making a new '\fBShoes\fP'\&. This function then calls the parameterized constructor for a '\fBShoes\fP' using those details\&. "
.ti -1c
.RI "\fBBelt\fP \fBAddBelt\fP ()"
.br
.RI "Creates a '\fBBelt\fP' object  This function will take user input to record the necessary details for making a new '\fBBelt\fP'\&. This function then calls the parameterized constructor for a '\fBBelt\fP' using those details\&. "
.ti -1c
.RI "int \fBAssignID\fP (string type)"
.br
.RI "Assigns unique ID to clothes  This function assigns the next available ID number for a given type\&. The last two numbers represent the number of the given type, while the other numbers represent the type\&. For Example, if there are currently 4 shirts, then the next shirt will have the ID of 105\&. The 100 represents shirts, while the 05 means it is the fifth shirt\&. This allows for 99 items of a given type and (2^29)-1 types??? "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "string \fBcloset_name_\fP = \fBkDummyClosetName\fP"
.br
.ti -1c
.RI "map< int, \fBShirt\fP > \fBshirt_map_\fP"
.br
.ti -1c
.RI "map< int, \fBPants\fP > \fBpants_map_\fP"
.br
.ti -1c
.RI "map< int, \fBSocks\fP > \fBsocks_map_\fP"
.br
.ti -1c
.RI "map< int, \fBShoes\fP > \fBshoes_map_\fP"
.br
.ti -1c
.RI "map< int, \fBBelt\fP > \fBbelt_map_\fP"
.br
.ti -1c
.RI "\fBNcurses\fP \fBwindow\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor:\fP
.RS 4
Stephen M\&. Reaves 
.RE
.PP
\fBDate:\fP
.RS 4
July 14th, 2018 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "Closet::Closet ()"
Default Constructor 
.SS "Closet::~Closet ()\fC [virtual]\fP"

.PP
Closes the window, then kills the \fBCloset\fP\&. Deconstructor 
.PP
References window\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBBelt\fP Closet::AddBelt ()\fC [private]\fP"

.PP
Creates a '\fBBelt\fP' object  This function will take user input to record the necessary details for making a new '\fBBelt\fP'\&. This function then calls the parameterized constructor for a '\fBBelt\fP' using those details\&. AddBelt 
.PP
\fBReturns:\fP
.RS 4
An instance of the '\fBBelt\fP' class\&. 
.RE
.PP

.PP
References AssignID(), and window\&.
.SS "\fBPants\fP Closet::AddPants ()\fC [private]\fP"

.PP
Creates a '\fBPants\fP' object  This function will take user input to record the necessary details for making a new '\fBPants\fP'\&. This function then calls the parameterized constructor for a '\fBPants\fP' using those details\&. AddPants 
.PP
\fBReturns:\fP
.RS 4
An instance of the '\fBPants\fP' class\&. 
.RE
.PP

.PP
References AssignID(), and window\&.
.SS "\fBShirt\fP Closet::AddShirt ()\fC [private]\fP"

.PP
Creates a '\fBShirt\fP' object\&. AddShirt 
.PP
\fBReturns:\fP
.RS 4
an instance of the '\fBShirt\fP' Class\&.  This function will take user input to record the necessary details for making a new '\fBShirt\fP'\&. This function then calls the parameterized constructor for a '\fBShirt\fP' using those details\&. 
.RE
.PP

.PP
References AssignID(), and window\&.
.SS "\fBShoes\fP Closet::AddShoes ()\fC [private]\fP"

.PP
Creates a '\fBShoes\fP' object  This function will take user input to record the necessary details for making a new '\fBShoes\fP'\&. This function then calls the parameterized constructor for a '\fBShoes\fP' using those details\&. AddShoes 
.PP
\fBReturns:\fP
.RS 4
An instance of the '\fBShoes\fP' class\&. 
.RE
.PP

.PP
References AssignID(), and window\&.
.SS "\fBSocks\fP Closet::AddSocks ()\fC [private]\fP"

.PP
Creates a '\fBSocks\fP' object  This function will take user input to record the necessary details for making a new '\fBSocks\fP'\&. This function then calls the parameterized constructor for a '\fBSocks\fP' using those details\&. AddSocks 
.PP
\fBReturns:\fP
.RS 4
An instance of the '\fBSocks\fP' class\&. 
.RE
.PP

.PP
References AssignID(), and window\&.
.SS "int Closet::AssignID (string type)\fC [private]\fP"

.PP
Assigns unique ID to clothes  This function assigns the next available ID number for a given type\&. The last two numbers represent the number of the given type, while the other numbers represent the type\&. For Example, if there are currently 4 shirts, then the next shirt will have the ID of 105\&. The 100 represents shirts, while the 05 means it is the fifth shirt\&. This allows for 99 items of a given type and (2^29)-1 types??? AssignID 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP A string dictating the type of clothing to check\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
An integer corrosponding to the next available ID for the given type, or -1 for an error\&. 
.RE
.PP
\fBNote:\fP
.RS 4
So far the types are hard coded in\&. Meaning you can only create clothes that are either shirts, pants, belts, socks, or shoes\&. There is currently no way to dynamically add types\&. Underwear types were intentionally left out to test the best way to dynamically add new types\&. 
.RE
.PP
<
.PP
\fBTodo\fP
.RS 4
Use Switch-case for \fBCloset::AssignID\fP 
.RE
.PP

.PP
References belt_map_, pants_map_, shirt_map_, shoes_map_, socks_map_, and window\&.
.SS "string Closet::GetClosetName ()"
GetClosetName
.PP
\fBReturns:\fP
.RS 4
Name of the closet 
.RE
.PP

.PP
References closet_name_\&.
.SS "void Closet::ImportCloset (string filename)"

.PP
This function builds a \fBCloset\fP from a file, then calls the default 'MakeCloset' function\&. ImportCloset 
.PP
\fBNote:\fP
.RS 4
The filename must end in an acceptable filetype 
.RE
.PP

.SS "void Closet::MakeCloset ()"

.PP
This function is the wrapper function that is responsible for creating the clothes and then inserting them to the appropriate map\&. MakeCloset  For each type of clothing, this function asks the user if they want to add a new clothing of that type\&. If they do then they call the clothing function to fill in the clothing specific details\&. This function calls on '\fBWindow\fP' to handle the input\&. 
.PP
References AddBelt(), AddPants(), AddShirt(), AddShoes(), AddSocks(), belt_map_, closet_name_, Clothes::GetID(), pants_map_, shirt_map_, shoes_map_, socks_map_, and window\&.
.SS "string Closet::StoreCloset () const"
StoreCloset 
.PP
\fBReturns:\fP
.RS 4
XML representation of closet 
.RE
.PP

.PP
References belt_map_, pants_map_, shirt_map_, shoes_map_, and socks_map_\&.
.SS "string Closet::ToString () const"
ToString 
.PP
\fBReturns:\fP
.RS 4
'string' representing the closet 
.RE
.PP

.PP
References belt_map_, pants_map_, shirt_map_, shoes_map_, and socks_map_\&.
.SS "string Closet::ToXML () const"

.SH "Member Data Documentation"
.PP 
.SS "map<int, \fBBelt\fP> Closet::belt_map_\fC [private]\fP"

.SS "string Closet::closet_name_ = \fBkDummyClosetName\fP\fC [private]\fP"

.SS "map<int, \fBPants\fP> Closet::pants_map_\fC [private]\fP"

.SS "map<int, \fBShirt\fP> Closet::shirt_map_\fC [private]\fP"

.SS "map<int, \fBShoes\fP> Closet::shoes_map_\fC [private]\fP"

.SS "map<int, \fBSocks\fP> Closet::socks_map_\fC [private]\fP"

.SS "\fBNcurses\fP Closet::window\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for ClosetPlusPlus from the source code\&.
